Run options: include {:wip=>true}

All examples were filtered out; ignoring {:wip=>true}

Pucker::BestBnPlayer
  #bet
    when has low hand
      when scenario is bad
[32m        should fold[0m
      when scenario is medium
[32m        should fold[0m
      when scenario is good
[32m        should raise[0m
    when has avg hand
      when scenario is bad
[32m        should fold[0m
      when scenario is medium
[32m        should fold[0m
      when scenario is good
[32m        should raise[0m
    when has high hand
      when scenario is bad
[32m        should check[0m
      when scenario is medium
[32m        should raise[0m
      when scenario is good
[32m        should raise[0m

Pucker::BnPlayer
  #bet
    when has low hand
      when scenario is bad
[32m        should fold[0m
      when scenario is medium
[32m        should fold[0m
      when scenario is good
[32m        should raise[0m
    when has avg hand
      when scenario is bad
[32m        should fold[0m
      when scenario is medium
[32m        should fold[0m
      when scenario is good
[32m        should raise[0m
    when has high hand
      when scenario is bad
[32m        should check[0m
      when scenario is medium
[32m        should raise[0m
      when scenario is good
[32m        should raise[0m

Pucker::SimpleBnPlayer
  #bet
    when has low hand
      when min_bet equals zero
[32m        should check[0m
      when min_bet greater than zero
[32m        should fold[0m
    when has avg hand
      when min_bet equals zero
[32m        should raise[0m
      when min_bet greater than zero
[32m        should check[0m
    when has high hand
      when min_bet equals zero
[32m        should raise[0m
      when min_bet greater than zero
[32m        should raise[0m

Pucker::Dealer
  #deal
[32m    deals cards[0m
[32m    deals 52 different cards[0m
[32m    doesn't deal 53 cards[0m
  #reset
[32m    allows dealer to continue dealing[0m
[32m    should deal cards in different order[0m

Pucker::Game
  #initialize
[32m    should have 5 players by default[0m
[32m    should allow definition of number of players[0m
  #collect_bets
[33m    collect bets (PENDING: Not yet implemented)[0m
  private methods
    #prepare_players
[32m      should rebuy players with insuficient stack[0m
[32m      should set all players active and remove allin states[0m
[32m      should rotate players[0m
    integration tests for rewards
      #eligible_players_by_rank
[32m        sort players[0m
      reward eligible_players_by_rank
[32m        rewards players[0m

Pucker::PlayerGroup
  #[]
[32m    should delegate to container[0m
  #set_hands
[32m    should give 2 cards to each player[0m
  #reset
[32m    shouldnt change players size[0m
    when players have ZERO stack
[32m      should increase back its stack[0m

Pucker::Player
  #initialize
[32m    should have a uniq id[0m
  #bet_if_active
[32m    should return what #bet returns[0m
    when player is NOT active
[32m      should be falsey[0m
  #bet
[32m    should check every time[0m
  #get_from_stack
    when player has more
[32m      should get amount[0m
    when player has less
[32m      should zero stack[0m
[32m      should desactivate player[0m
  #set_hand
[32m    should put 2 cards on player's hand[0m
  #hand_rank
[32m    should rank players hand according to table cards[0m
[32m    shouldnt call HandEvaluator again if table cards hasnt changed[0m
  protected methods
    #full_hand
[32m      should misc players and table cards[0m

Pucker::DummyPlayer
  #bet
    when he folds
[32m      should equal false[0m
    when he checks
[32m      should equal 10[0m
    when he raises
[32m      should return a value between min_value and stack[0m

Pucker::Pot
  #all_bets
[32m    should return a hash[0m
  #add_bet
    when player hasnt betted yet
[32m      should increase the number of contributors[0m
  #sum
    when directed called
[32m      should misc too pots[0m
    when called via +=
[32m      should misc too pots in place[0m
  #total_contributed_by
    when player hasnt betted
[32m      should return ZERO[0m
  #empty
[32m    should be empty when initialized[0m
[32m    should be empty when there arent bets[0m
  #get_from_all
[32m    should get an amount from every players bet[0m

Pending: (Failures listed here are expected and do not affect your suite's status)
[33m
  1) Pucker::Game#collect_bets collect bets[0m
     [36m# Not yet implemented[0m
[36m     # ./spec/pucker/game_spec.rb:19
[0m

Finished in 7.53 seconds (files took 1.68 seconds to load)
[33m63 examples, 0 failures, 1 pending[0m

